//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BOL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StoredProcedureDBEntities : DbContext
    {
        public StoredProcedureDBEntities()
            : base("name=StoredProcedureDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PilotTask> PilotTasks { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
    
        public virtual int PilotTasks_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PilotTasks_Delete", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PilotTasks_Insert(string taskName, string taskDiscription, Nullable<System.DateTime> startTime, Nullable<int> status, Nullable<int> profile_ID)
        {
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var taskDiscriptionParameter = taskDiscription != null ?
                new ObjectParameter("TaskDiscription", taskDiscription) :
                new ObjectParameter("TaskDiscription", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var profile_IDParameter = profile_ID.HasValue ?
                new ObjectParameter("Profile_ID", profile_ID) :
                new ObjectParameter("Profile_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PilotTasks_Insert", taskNameParameter, taskDiscriptionParameter, startTimeParameter, statusParameter, profile_IDParameter);
        }
    
        public virtual int PilotTasks_Update(Nullable<int> id, string taskName, string taskDiscription, Nullable<System.DateTime> startTime, Nullable<int> status, Nullable<int> profile_ID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var taskDiscriptionParameter = taskDiscription != null ?
                new ObjectParameter("TaskDiscription", taskDiscription) :
                new ObjectParameter("TaskDiscription", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var profile_IDParameter = profile_ID.HasValue ?
                new ObjectParameter("Profile_ID", profile_ID) :
                new ObjectParameter("Profile_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PilotTasks_Update", idParameter, taskNameParameter, taskDiscriptionParameter, startTimeParameter, statusParameter, profile_IDParameter);
        }
    
        public virtual int Profiles_Delete(Nullable<int> profile_ID)
        {
            var profile_IDParameter = profile_ID.HasValue ?
                new ObjectParameter("Profile_ID", profile_ID) :
                new ObjectParameter("Profile_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Profiles_Delete", profile_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Profiles_Insert(Nullable<int> profile_ID, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, string phoneNumber, string email_ID)
        {
            var profile_IDParameter = profile_ID.HasValue ?
                new ObjectParameter("Profile_ID", profile_ID) :
                new ObjectParameter("Profile_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var email_IDParameter = email_ID != null ?
                new ObjectParameter("Email_ID", email_ID) :
                new ObjectParameter("Email_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Profiles_Insert", profile_IDParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, phoneNumberParameter, email_IDParameter);
        }
    
        public virtual int Profiles_Update(Nullable<int> profile_ID, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, string phoneNumber, string email_ID)
        {
            var profile_IDParameter = profile_ID.HasValue ?
                new ObjectParameter("Profile_ID", profile_ID) :
                new ObjectParameter("Profile_ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var email_IDParameter = email_ID != null ?
                new ObjectParameter("Email_ID", email_ID) :
                new ObjectParameter("Email_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Profiles_Update", profile_IDParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, phoneNumberParameter, email_IDParameter);
        }
    
        public virtual ObjectResult<Profile> GetProfilesById(Nullable<int> profile_Id)
        {
            var profile_IdParameter = profile_Id.HasValue ?
                new ObjectParameter("Profile_Id", profile_Id) :
                new ObjectParameter("Profile_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profile>("GetProfilesById", profile_IdParameter);
        }
    
        public virtual ObjectResult<Profile> GetProfilesById(Nullable<int> profile_Id, MergeOption mergeOption)
        {
            var profile_IdParameter = profile_Id.HasValue ?
                new ObjectParameter("Profile_Id", profile_Id) :
                new ObjectParameter("Profile_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profile>("GetProfilesById", mergeOption, profile_IdParameter);
        }
    
        public virtual ObjectResult<Profile> sp_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profile>("sp_GetAll");
        }
    
        public virtual ObjectResult<Profile> sp_GetAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Profile>("sp_GetAll", mergeOption);
        }
    }
}
